{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/actions/city-forecast.actions.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/effects/city-weather.effects.ts","webpack:///src/app/models/city-current-weather.model.ts","webpack:///src/app/models/city-forecast.model.ts","webpack:///src/app/models/city-weather-card.model.ts","webpack:///src/app/reducers/city-weather.reducer.ts","webpack:///src/app/services/accuweather-http.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","FETCH_CITY_FORECAST","SHOW_CITY_FORECAST","FETCH_CITY_FORECAST_FAIL","ADD_CITY_TO_FAVOURITES","REMOVE_CITY_FROM_FAVOURITES","FetchCityForecast","payload","type","ShowCityForecast","FetchCityForecastFail","AddCityToFavourites","RemoveCityToFavourites","routes","path","loadChildren","m","HomeModule","FavoritesModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","store","_snackBar","title","isDark","isLoading","initialCity","Key","LocalizedName","sub","dispatch","select","subscribe","state","loading","fetchError","showError","message","open","duration","unsubscribe","themeToggled","selector","templateUrl","styleUrls","AppModule","cityWeatherReducer","declarations","providers","bootstrap","NavbarComponent","toggleControl","valueChanges","value","emit","CityWeatherEffects","actions$","accuweatherHttpService","router","cityForecastFetch$","pipe","cityData","getCityWeatherCard","showCityForecast","navigate","CityCurrentWeather","CityForecast","DailyCityForecast","CityWeatherCard","initialState","favourites","cityWeatherCard","unit","action","filtered","filter","item","AccuweatherHttpService","http","url","apiKey","keyword","params","q","apikey","get","response","cityCode","cityCurrentWeather","WeatherIcon","WeatherText","PrecipitationType","Temperature","metric","cityForecast","Headline","DailyForecasts","currentWeather","getCityCurrentWeather","forecastWeather","getCityForecast","res","CityName","Current","Forecast","error","providedIn","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Action } from '@ngrx/store';\r\nimport {CityWeatherCard} from '../models/city-weather-card.model';\r\nimport {City} from '../models/city.model';\r\n\r\nexport const FETCH_CITY_FORECAST        = 'FETCH_CITY_FORECAST';\r\nexport const SHOW_CITY_FORECAST         = 'SHOW_CITY_FORECAST';\r\nexport const FETCH_CITY_FORECAST_FAIL   = 'FETCH_CITY_FORECAST_FAIL';\r\nexport const ADD_CITY_TO_FAVOURITES     = 'ADD_CITY_TO_FAVOURITES';\r\nexport const REMOVE_CITY_FROM_FAVOURITES = 'REMOVE_CITY_FROM_FAVOURITES';\r\n\r\nexport class FetchCityForecast implements Action {\r\n  readonly type = FETCH_CITY_FORECAST;\r\n\r\n  constructor(public payload: City) {}\r\n}\r\n\r\nexport class ShowCityForecast implements Action {\r\n  readonly type = SHOW_CITY_FORECAST;\r\n\r\n  constructor(public payload: CityWeatherCard) {}\r\n}\r\n\r\nexport class FetchCityForecastFail implements Action {\r\n  readonly type = FETCH_CITY_FORECAST_FAIL;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class AddCityToFavourites implements Action {\r\n  readonly type = ADD_CITY_TO_FAVOURITES;\r\n\r\n  constructor(public payload: CityWeatherCard) {}\r\n}\r\n\r\nexport class RemoveCityToFavourites implements Action {\r\n  readonly type = REMOVE_CITY_FROM_FAVOURITES;\r\n\r\n  constructor(public payload: number) {}\r\n}\r\n\r\n\r\nexport type CityForecastActionsActions =\r\n  ShowCityForecast |\r\n  FetchCityForecast |\r\n  FetchCityForecastFail |\r\n  AddCityToFavourites |\r\n  RemoveCityToFavourites;\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: 'home', loadChildren: () => import('./components/home/home.module').then(m => m.HomeModule)},\n  { path: 'favorites', loadChildren: () => import('./components/favorites/favorites.module').then(m => m.FavoritesModule)},\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', loadChildren: () => import('./components/home/home.module').then(m => m.HomeModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {Store} from '@ngrx/store';\r\nimport {State} from './reducers/city-weather.reducer';\r\nimport {City} from './models/city.model';\r\nimport * as CityForeCastActions from './actions/city-forecast.actions';\r\nimport {Subscription} from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'My Weather';\r\n  isDark = false;\r\n  isLoading = false;\r\n\r\n  readonly initialCity: City = {\r\n    Key: 215854,\r\n    LocalizedName: 'Tel Aviv',\r\n  };\r\n  sub = new Subscription();\r\n\r\n  constructor(private store: Store<{ cityWeatherReducer: State }>, private _snackBar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new CityForeCastActions.FetchCityForecast(this.initialCity));\r\n\r\n    this.sub = this.store.select('cityWeatherReducer').subscribe(state => {\r\n      this.isLoading = state.loading;\r\n      if (state.fetchError) {\r\n        this.showError(state.fetchError);\r\n      }\r\n    });\r\n  }\r\n\r\n  showError(message: string) {\r\n    this._snackBar.open(message, 'close', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n\r\n  themeToggled(isDark: boolean): void{\r\n    this.isDark = isDark;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"mat-typography app-frame mat-app-background\" [ngClass]=\"{'dark-theme': isDark}\">\r\n  <app-navbar  (themeToggled)=\"themeToggled($event)\"></app-navbar>\r\n  <div class=\"spinner\" *ngIf=\"isLoading\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {cityWeatherReducer} from './reducers/city-weather.reducer';\r\nimport {CityWeatherEffects} from './effects/city-weather.effects';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\n\r\nimport {NavbarComponent} from './components/navbar/navbar.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot({cityWeatherReducer: cityWeatherReducer}),\r\n    EffectsModule.forRoot([CityWeatherEffects]),\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    ReactiveFormsModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  toggleControl = new FormControl(false);\r\n  @Output() themeToggled = new EventEmitter<boolean>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.toggleControl.valueChanges.subscribe(value => {\r\n      this.themeToggled.emit(value);\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"sticky-top\">\r\n  <mat-toolbar-row>\r\n    <span class=\"logo pointer\" routerLink=\"/home\">My Weather</span>\r\n    <span class=\"spacer\"></span>\r\n    <div class=\"nav-item d-flex\">\r\n      <mat-icon>brightness_5</mat-icon>\r\n      <mat-slide-toggle [formControl]=\"toggleControl\" class=\"mx-2\"></mat-slide-toggle>\r\n      <mat-icon>bedtime</mat-icon>\r\n    </div>\r\n\r\n    <span class=\"nav-item pointer\"  [routerLinkActive]=\"['active']\" routerLink=\"/home\">Home</span>\r\n    <span class=\"nav-item pointer\"  [routerLinkActive]=\"['active']\" routerLink=\"/favorites\">Favorites</span>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import {Actions, Effect, ofType} from '@ngrx/effects';\r\nimport {Router} from '@angular/router';\r\nimport {switchMap, tap} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {AccuweatherHttpService} from '../services/accuweather-http.service';\r\nimport * as CityForecastActions from '../actions/city-forecast.actions';\r\n\r\n@Injectable()\r\nexport class CityWeatherEffects {\r\n  @Effect()\r\n  cityForecastFetch$ = this.actions$.pipe(\r\n    ofType(CityForecastActions.FETCH_CITY_FORECAST),\r\n    switchMap((cityData: CityForecastActions.FetchCityForecast) => {\r\n        return this.accuweatherHttpService.getCityWeatherCard(cityData);\r\n      }\r\n    ));\r\n\r\n\r\n  @Effect({dispatch: false})\r\n  showCityForecast = this.actions$.pipe(\r\n    ofType(CityForecastActions.SHOW_CITY_FORECAST),\r\n    tap(() => {\r\n        this.router.navigate(['home', 'forecast']);\r\n      }\r\n    ));\r\n    constructor(private actions$: Actions, private accuweatherHttpService: AccuweatherHttpService, private router: Router) {\r\n  }\r\n}\r\n","export class CityCurrentWeather {\r\n  WeatherIcon: string\r\n  WeatherText: string\r\n  PrecipitationType: string\r\n  Temperature: { Metric: {Value: string} }\r\n}\r\n","export class CityForecast {\r\n  Headline: { Text: string };\r\n  DailyForecasts: DailyCityForecast[];\r\n}\r\n\r\nclass DailyCityForecast {\r\n  Date: string;\r\n  Temperature: { Maximum: {Value: string} , Minimum: {Value: string}};\r\n}\r\n\r\n\r\n","import {CityCurrentWeather} from \"./city-current-weather.model\";\r\nimport {CityForecast} from \"./city-forecast.model\";\r\n\r\n\r\nexport class CityWeatherCard {\r\n  CityName: string;\r\n  Key: number;\r\n  Current: CityCurrentWeather;\r\n  Forecast: CityForecast;\r\n}\r\n","import * as CityForeCastActions from '../actions/city-forecast.actions';\r\nimport {CityWeatherCard} from '../models/city-weather-card.model';\r\nimport {CityForecastActionsActions} from '../actions/city-forecast.actions';\r\n\r\nexport interface State {\r\n  favourites: CityWeatherCard[];\r\n  cityWeatherCard: CityWeatherCard;\r\n  fetchError: string;\r\n  loading: boolean;\r\n  unit: 'metric' | 'imperial';\r\n}\r\n\r\nconst initialState: State = {\r\n  favourites: [],\r\n  cityWeatherCard: null,\r\n  fetchError: null,\r\n  loading: false,\r\n  unit: 'metric'\r\n};\r\n\r\n\r\nexport function cityWeatherReducer(\r\n  state: State = initialState,\r\n  action: CityForecastActionsActions\r\n) {\r\n    switch (action.type) {\r\n    case CityForeCastActions.SHOW_CITY_FORECAST:\r\n      return {...state, cityWeatherCard: action.payload, fetchError: null, loading: false};\r\n    case CityForeCastActions.FETCH_CITY_FORECAST:\r\n      return {...state, fetchError: null, loading: true};\r\n    case CityForeCastActions.FETCH_CITY_FORECAST_FAIL:\r\n      return {...state, cityWeatherCard: null, fetchError: action.payload, loading: false};\r\n    case CityForeCastActions.ADD_CITY_TO_FAVOURITES:\r\n      return {...state, favourites: [...state.favourites, action.payload]};\r\n    case CityForeCastActions.REMOVE_CITY_FROM_FAVOURITES:\r\n      const filtered = [...state.favourites].filter(item => item.Key !== action.payload);\r\n      return {...state, favourites: filtered};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {forkJoin, Observable, of} from 'rxjs';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {FetchCityForecastFail, ShowCityForecast} from '../actions/city-forecast.actions';\r\nimport * as CityForeCastActions from '../actions/city-forecast.actions';\r\nimport {City} from '../models/city.model';\r\nimport {CityForecast} from '../models/city-forecast.model';\r\nimport {CityCurrentWeather} from '../models/city-current-weather.model';\r\nimport {CityWeatherCard} from '../models/city-weather-card.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccuweatherHttpService {\r\n  readonly url = 'https://dataservice.accuweather.com';\r\n  // readonly apiKey = 'kIAOQIguhCOciKN0htm5SlhS1TkCqlXA'; //first\r\n  readonly apiKey = 'aAzBLQb54i8UeWQIxdE6V0l0WhAeGlDG'; //second\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  search(keyword: string): Observable<City[]> {\r\n    const params = {\r\n      q: keyword,\r\n      apikey: this.apiKey\r\n    };\r\n\r\n    return this.http.get(this.url + '/locations/v1/cities/autocomplete', {params})\r\n      .pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCityCurrentWeather(cityCode: number): Observable<CityCurrentWeather> {\r\n    const params = {\r\n      apikey: this.apiKey\r\n    };\r\n\r\n    return this.http.get(this.url + '/currentconditions/v1/' + cityCode,  {params})\r\n      .pipe(\r\n        map((response: any) => {\r\n          const cityCurrentWeather = new CityCurrentWeather();\r\n          cityCurrentWeather.WeatherIcon = response[0].WeatherIcon;\r\n          cityCurrentWeather.WeatherText = response[0].WeatherText;\r\n          cityCurrentWeather.PrecipitationType = response[0].PrecipitationType;\r\n          cityCurrentWeather.Temperature = response[0].Temperature;\r\n          return cityCurrentWeather;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCityForecast(cityCode: number): Observable<CityForecast> {\r\n\r\n    const params = {\r\n      apikey: this.apiKey,\r\n      metric: 'true',\r\n    };\r\n\r\n    return this.http.get(this.url + '/forecasts/v1/daily/5day/' + cityCode, {params})\r\n      .pipe(\r\n        map((response: any) => {\r\n          const cityForecast = new CityForecast();\r\n          cityForecast.Headline = response.Headline;\r\n          cityForecast.DailyForecasts = response.DailyForecasts;\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCityWeatherCard(cityData): Observable<ShowCityForecast | FetchCityForecastFail> {\r\n    return forkJoin(\r\n      {\r\n        currentWeather: this.getCityCurrentWeather(cityData.payload.Key),\r\n        forecastWeather: this.getCityForecast(cityData.payload.Key)\r\n      })\r\n      .pipe(\r\n        map(res => {\r\n          const cityForecast = new CityWeatherCard();\r\n          cityForecast.CityName = cityData.payload.LocalizedName;\r\n          cityForecast.Key = cityData.payload.Key;\r\n          cityForecast.Current = res.currentWeather;\r\n          cityForecast.Forecast = res.forecastWeather;\r\n          return new CityForeCastActions.ShowCityForecast(cityForecast);\r\n        }),\r\n        catchError(error => {\r\n          return of(new CityForeCastActions.FetchCityForecastFail('Something went wrong'));\r\n        })\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}