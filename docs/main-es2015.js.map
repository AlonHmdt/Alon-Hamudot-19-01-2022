{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/actions/city-forecast.actions.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/effects/city-weather.effects.ts","./src/app/models/city-current-weather.model.ts","./src/app/models/city-forecast.model.ts","./src/app/models/city-weather-card.model.ts","./src/app/reducers/city-weather.reducer.ts","./src/app/services/accuweather-http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Action } from '@ngrx/store';\r\nimport {CityWeatherCard} from '../models/city-weather-card.model';\r\nimport {City} from '../models/city.model';\r\n\r\nexport const FETCH_CITY_FORECAST        = 'FETCH_CITY_FORECAST';\r\nexport const SHOW_CITY_FORECAST         = 'SHOW_CITY_FORECAST';\r\nexport const FETCH_CITY_FORECAST_FAIL   = 'FETCH_CITY_FORECAST_FAIL';\r\nexport const ADD_CITY_TO_FAVOURITES     = 'ADD_CITY_TO_FAVOURITES';\r\nexport const REMOVE_CITY_FROM_FAVOURITES = 'REMOVE_CITY_FROM_FAVOURITES';\r\n\r\nexport class FetchCityForecast implements Action {\r\n  readonly type = FETCH_CITY_FORECAST;\r\n\r\n  constructor(public payload: City) {}\r\n}\r\n\r\nexport class ShowCityForecast implements Action {\r\n  readonly type = SHOW_CITY_FORECAST;\r\n\r\n  constructor(public payload: CityWeatherCard) {}\r\n}\r\n\r\nexport class FetchCityForecastFail implements Action {\r\n  readonly type = FETCH_CITY_FORECAST_FAIL;\r\n\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class AddCityToFavourites implements Action {\r\n  readonly type = ADD_CITY_TO_FAVOURITES;\r\n\r\n  constructor(public payload: CityWeatherCard) {}\r\n}\r\n\r\nexport class RemoveCityToFavourites implements Action {\r\n  readonly type = REMOVE_CITY_FROM_FAVOURITES;\r\n\r\n  constructor(public payload: number) {}\r\n}\r\n\r\n\r\nexport type CityForecastActionsActions =\r\n  ShowCityForecast |\r\n  FetchCityForecast |\r\n  FetchCityForecastFail |\r\n  AddCityToFavourites |\r\n  RemoveCityToFavourites;\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: 'home', loadChildren: () => import('./components/home/home.module').then(m => m.HomeModule)},\n  { path: 'favorites', loadChildren: () => import('./components/favorites/favorites.module').then(m => m.FavoritesModule)},\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', loadChildren: () => import('./components/home/home.module').then(m => m.HomeModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {Store} from '@ngrx/store';\r\nimport {State} from './reducers/city-weather.reducer';\r\nimport {City} from './models/city.model';\r\nimport * as CityForeCastActions from './actions/city-forecast.actions';\r\nimport {Subscription} from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'My Weather';\r\n  isDark = false;\r\n  isLoading = false;\r\n\r\n  readonly initialCity: City = {\r\n    Key: 215854,\r\n    LocalizedName: 'Tel Aviv',\r\n  };\r\n  sub = new Subscription();\r\n\r\n  constructor(private store: Store<{ cityWeatherReducer: State }>, private _snackBar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new CityForeCastActions.FetchCityForecast(this.initialCity));\r\n\r\n    this.sub = this.store.select('cityWeatherReducer').subscribe(state => {\r\n      this.isLoading = state.loading;\r\n      if (state.fetchError) {\r\n        this.showError(state.fetchError);\r\n      }\r\n    });\r\n  }\r\n\r\n  showError(message: string) {\r\n    this._snackBar.open(message, 'close', {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n\r\n  themeToggled(isDark: boolean): void{\r\n    this.isDark = isDark;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sub) {\r\n      this.sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"mat-typography app-frame mat-app-background\" [ngClass]=\"{'dark-theme': isDark}\">\r\n  <app-navbar  (themeToggled)=\"themeToggled($event)\"></app-navbar>\r\n  <div class=\"spinner\" *ngIf=\"isLoading\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {cityWeatherReducer} from './reducers/city-weather.reducer';\r\nimport {CityWeatherEffects} from './effects/city-weather.effects';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\n\r\nimport {NavbarComponent} from './components/navbar/navbar.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot({cityWeatherReducer: cityWeatherReducer}),\r\n    EffectsModule.forRoot([CityWeatherEffects]),\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    ReactiveFormsModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  toggleControl = new FormControl(false);\r\n  @Output() themeToggled = new EventEmitter<boolean>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.toggleControl.valueChanges.subscribe(value => {\r\n      this.themeToggled.emit(value);\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"sticky-top\">\r\n  <mat-toolbar-row>\r\n    <span class=\"logo pointer\" routerLink=\"/home\">My Weather</span>\r\n    <span class=\"spacer\"></span>\r\n    <div class=\"nav-item d-flex\">\r\n      <mat-icon>brightness_5</mat-icon>\r\n      <mat-slide-toggle [formControl]=\"toggleControl\" class=\"mx-1\"></mat-slide-toggle>\r\n      <mat-icon>bedtime</mat-icon>\r\n    </div>\r\n\r\n    <span class=\"nav-item pointer\"  [routerLinkActive]=\"['active']\" routerLink=\"/home\">Home</span>\r\n    <span class=\"nav-item pointer\"  [routerLinkActive]=\"['active']\" routerLink=\"/favorites\">Favorites</span>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import {Actions, Effect, ofType} from '@ngrx/effects';\r\nimport {Router} from '@angular/router';\r\nimport {switchMap, tap} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {AccuweatherHttpService} from '../services/accuweather-http.service';\r\nimport * as CityForecastActions from '../actions/city-forecast.actions';\r\n\r\n@Injectable()\r\nexport class CityWeatherEffects {\r\n  @Effect()\r\n  cityForecastFetch$ = this.actions$.pipe(\r\n    ofType(CityForecastActions.FETCH_CITY_FORECAST),\r\n    switchMap((cityData: CityForecastActions.FetchCityForecast) => {\r\n        return this.accuweatherHttpService.getCityWeatherCard(cityData);\r\n      }\r\n    ));\r\n\r\n\r\n  @Effect({dispatch: false})\r\n  showCityForecast = this.actions$.pipe(\r\n    ofType(CityForecastActions.SHOW_CITY_FORECAST),\r\n    tap(() => {\r\n        this.router.navigate(['home', 'forecast']);\r\n      }\r\n    ));\r\n    constructor(private actions$: Actions, private accuweatherHttpService: AccuweatherHttpService, private router: Router) {\r\n  }\r\n}\r\n","export class CityCurrentWeather {\r\n  WeatherIcon: string\r\n  WeatherText: string\r\n  PrecipitationType: string\r\n  Temperature: { Metric: {Value: string} }\r\n}\r\n","export class CityForecast {\r\n  Headline: { Text: string };\r\n  DailyForecasts: DailyCityForecast[];\r\n}\r\n\r\nclass DailyCityForecast {\r\n  Date: string;\r\n  Temperature: { Maximum: {Value: string} , Minimum: {Value: string}};\r\n}\r\n\r\n\r\n","import {CityCurrentWeather} from \"./city-current-weather.model\";\r\nimport {CityForecast} from \"./city-forecast.model\";\r\n\r\n\r\nexport class CityWeatherCard {\r\n  CityName: string;\r\n  Key: number;\r\n  Current: CityCurrentWeather;\r\n  Forecast: CityForecast;\r\n}\r\n","import * as CityForeCastActions from '../actions/city-forecast.actions';\r\nimport {CityWeatherCard} from '../models/city-weather-card.model';\r\nimport {CityForecastActionsActions} from '../actions/city-forecast.actions';\r\n\r\nexport interface State {\r\n  favourites: CityWeatherCard[];\r\n  cityWeatherCard: CityWeatherCard;\r\n  fetchError: string;\r\n  loading: boolean;\r\n  unit: 'metric' | 'imperial';\r\n}\r\n\r\nconst initialState: State = {\r\n  favourites: [],\r\n  cityWeatherCard: null,\r\n  fetchError: null,\r\n  loading: false,\r\n  unit: 'metric'\r\n};\r\n\r\n\r\nexport function cityWeatherReducer(\r\n  state: State = initialState,\r\n  action: CityForecastActionsActions\r\n) {\r\n    switch (action.type) {\r\n    case CityForeCastActions.SHOW_CITY_FORECAST:\r\n      return {...state, cityWeatherCard: action.payload, fetchError: null, loading: false};\r\n    case CityForeCastActions.FETCH_CITY_FORECAST:\r\n      return {...state, fetchError: null, loading: true};\r\n    case CityForeCastActions.FETCH_CITY_FORECAST_FAIL:\r\n      return {...state, cityWeatherCard: null, fetchError: action.payload, loading: false};\r\n    case CityForeCastActions.ADD_CITY_TO_FAVOURITES:\r\n      return {...state, favourites: [...state.favourites, action.payload]};\r\n    case CityForeCastActions.REMOVE_CITY_FROM_FAVOURITES:\r\n      const filtered = [...state.favourites].filter(item => item.Key !== action.payload);\r\n      return {...state, favourites: filtered};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {forkJoin, Observable, of} from 'rxjs';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {FetchCityForecastFail, ShowCityForecast} from '../actions/city-forecast.actions';\r\nimport * as CityForeCastActions from '../actions/city-forecast.actions';\r\nimport {City} from '../models/city.model';\r\nimport {CityForecast} from '../models/city-forecast.model';\r\nimport {CityCurrentWeather} from '../models/city-current-weather.model';\r\nimport {CityWeatherCard} from '../models/city-weather-card.model';\r\nimport * as CityForecastActions from '../actions/city-forecast.actions';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccuweatherHttpService {\r\n  readonly url = 'https://dataservice.accuweather.com';\r\n  readonly apiKey = 'kIAOQIguhCOciKN0htm5SlhS1TkCqlXA';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  search(keyword: string): Observable<City[]> {\r\n    const params = {\r\n      q: keyword,\r\n      apikey: this.apiKey\r\n    };\r\n\r\n    return this.http.get(this.url + '/locations/v1/cities/autocomplete', {params})\r\n      .pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCityCurrentWeather(cityCode: number): Observable<CityCurrentWeather> {\r\n    const params = {\r\n      apikey: this.apiKey\r\n    };\r\n\r\n    return this.http.get(this.url + '/currentconditions/v1/' + cityCode,  {params})\r\n      .pipe(\r\n        map((response: any) => {\r\n          const cityCurrentWeather = new CityCurrentWeather();\r\n          cityCurrentWeather.WeatherIcon = response[0].WeatherIcon;\r\n          cityCurrentWeather.WeatherText = response[0].WeatherText;\r\n          cityCurrentWeather.PrecipitationType = response[0].PrecipitationType;\r\n          cityCurrentWeather.Temperature = response[0].Temperature;\r\n          return cityCurrentWeather;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCityForecast(cityCode: number): Observable<CityForecast> {\r\n\r\n    const params = {\r\n      apikey: this.apiKey,\r\n      metric: 'true',\r\n    };\r\n\r\n    return this.http.get(this.url + '/forecasts/v1/daily/5day/' + cityCode, {params})\r\n      .pipe(\r\n        map((response: any) => {\r\n          const cityForecast = new CityForecast();\r\n          cityForecast.Headline = response.Headline;\r\n          cityForecast.DailyForecasts = response.DailyForecasts;\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCityWeatherCard(cityData: CityForecastActions.FetchCityForecast): Observable<ShowCityForecast | FetchCityForecastFail> {\r\n    return forkJoin(\r\n      {\r\n        currentWeather: this.getCityCurrentWeather(cityData.payload.Key),\r\n        forecastWeather: this.getCityForecast(cityData.payload.Key)\r\n      })\r\n      .pipe(\r\n        map(res => {\r\n          const cityForecast = new CityWeatherCard();\r\n          cityForecast.CityName = cityData.payload.LocalizedName;\r\n          cityForecast.Key = cityData.payload.Key;\r\n          cityForecast.Current = res.currentWeather;\r\n          cityForecast.Forecast = res.forecastWeather;\r\n          return new CityForeCastActions.ShowCityForecast(cityForecast);\r\n        }),\r\n        catchError(error => {\r\n          return of(new CityForeCastActions.FetchCityForecastFail('Something went wrong'));\r\n        })\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}