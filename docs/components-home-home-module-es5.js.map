{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///src/app/components/home/city-forecast/city-forecast.component.ts","webpack:///src/app/components/home/city-forecast/city-forecast.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/home.module.ts","webpack:///src/app/components/home/search-bar/search-bar.component.ts","webpack:///src/app/components/home/search-bar/search-bar.component.html"],"names":["listenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","Map","elementOrRef","isBrowser","element","info","get","subject","asObservable","result","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","complete","forEach","_info","stopMonitoring","ɵfac","AutofillMonitor_Factory","t","ctorParameters","type","ɵprov","factory","token","providedIn","args","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","monitor","subscribe","emit","CdkAutofill_Factory","ɵdir","selectors","outputs","propDecorators","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_document","_textareaElement","nativeElement","_measuringClass","FIREFOX","_minRows","value","_setMinHeight","_maxRows","_setMaxHeight","resizeToFitContent","reset","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","window","_getWindow","pipe","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","removeChild","force","_cacheTextareaLineHeight","textarea","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","undefined","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","CdkTextareaAutosize_Factory","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","inputs","enabled","exportAs","decorators","host","TextFieldModule","ɵmod","ɵinj","TextFieldModule_Factory","imports","ngJitMode","declarations","exports","_c0","MatAutocomplete_ng_template_0_Template","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteActivatedEvent","MatAutocompleteBase","_MatAutocompleteMixinBase","MatAutocompleteDefaultOptions","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","MatAutocomplete","_changeDetectorRef","defaults","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","length","split","reduce","className","trim","_setVisibilityClasses","_keyManager","options","withWrap","change","index","toArray","_setVisibility","unsubscribe","scrollTop","panel","markForCheck","MatAutocomplete_Factory","ɵcmp","contentQueries","MatAutocomplete_ContentQueries","dirIndex","_t","optionGroups","viewQuery","MatAutocomplete_Query","template","first","disableRipple","panelWidth","features","provide","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","descendants","None","OnPush","providers","MatAutocompleteOrigin","elementRef","MatAutocompleteOrigin_Factory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","_scrollStrategy","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","_destroyPanel","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","tabOut","_getOutsideClickStream","detachments","activeItem","clickTarget","_isInsideShadowRoot","composedPath","formField","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","shouldAnimate","floatLabel","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","selected","deselect","overlayRef","_portal","create","_getOverlayConfig","keydownEvents","altKey","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","abovePositions","positions","withPositions","connectedTo","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","readOnly","_a","MatAutocompleteTrigger_Factory","hostVars","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","MatAutocompleteModule_Factory","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","MatCard_HostBindings","MatCard_Template","String","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","hideRequiredMarker","required","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","nextUniqueId","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_appearance","oldValue","_processHints","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_connectionContainerRef","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","ids","_getDisplayedMessages","find","push","error","setDescribedByIds","labelEl","children","textContent","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","child","offsetWidth","Math","abs","i","rect","right","left","getRootNode","rootNode","documentElement","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","data","animation","animations","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_uid","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","filter","has","nodeName","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","multiple","_id","_validateType","updateErrorState","_dirtyCheckNativeValue","isFocused","readonly","newValue","indexOf","validity","badInput","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","_ariaDescribedby","join","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","errorStateMatcher","MatInputModule","MatInputModule_Factory","CityForecastComponent","store","router","cityWeatherCardSub","select","cityWeatherState","cityWeatherCard","navigate","isFav","favourites","some","item","Key","dispatch","templateUrl","styleUrls","HomeComponent","routes","path","component","HomeModule","forChild","SearchBarComponent","accuweatherHttpService","route","citiesList$","keyword","search","showResults","city"],"mappings":"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","file":"components-home-home-module-es5.js","sourcesContent":["import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * Class that should be applied to the textarea while it's being measured.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._measuringClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.option;\n}\n/**\n * Event object that is emitted when an autocomplete option is activated.\n * @record\n */\nfunction MatAutocompleteActivatedEvent() { }\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.option;\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Default `mat-autocomplete` options that can be overridden.\n * @record\n */\nfunction MatAutocompleteDefaultOptions() { }\nif (false) {\n    /**\n     * Whether the first option should be highlighted when an autocomplete panel is opened.\n     * @type {?|undefined}\n     */\n    MatAutocompleteDefaultOptions.prototype.autoActiveFirstOption;\n}\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Emits whenever an option is activated using the keyboard.\n         */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        }));\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_autoActiveFirstOption;\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._activeOptionChanges;\n    /**\n     * Manages active item in option list based on key events.\n     * @type {?}\n     */\n    MatAutocomplete.prototype._keyManager;\n    /**\n     * Whether the autocomplete panel should be visible, depending on option length.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.showPanel;\n    /** @type {?} */\n    MatAutocomplete.prototype._isOpen;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.template;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panel;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.options;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionGroups;\n    /**\n     * Function that maps an option's control value to its display value in the trigger.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._autoActiveFirstOption;\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panelWidth;\n    /**\n     * Event that is emitted whenever an option from the list is selected.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionSelected;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.closed;\n    /**\n     * Emits whenever an option is activated using the keyboard.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionActivated;\n    /** @type {?} */\n    MatAutocomplete.prototype._classList;\n    /**\n     * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-origin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    MatAutocompleteOrigin.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => window.addEventListener('blur', this._windowBlurHandler)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        /** @type {?} */\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        /** @type {?} */\n        const panelClass = 'mat-autocomplete-panel-above';\n        /** @type {?} */\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocompleteTrigger.ngAcceptInputType_autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._componentDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._scrollStrategy;\n    /**\n     * Old value of the native input. Used to work around issues with the `input` event on IE.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._previousValue;\n    /**\n     * Strategy that is used to position the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._positionStrategy;\n    /**\n     * Whether or not the label state is being overridden.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._manuallyFloatingLabel;\n    /**\n     * The subscription for closing actions (some are bound to document).\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closingActionsSubscription;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportSubscription;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._canOpenOnNextFocus;\n    /**\n     * Whether the element is inside of a ShadowRoot component.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._isInsideShadowRoot;\n    /**\n     * Stream of keyboard events that can close the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closeKeyEventStream;\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._windowBlurHandler;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onChange;\n    /**\n     * `View -> model callback called when autocomplete has been touched`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onTouched;\n    /**\n     * The autocomplete panel to be attached to this trigger.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocomplete;\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.position;\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.connectedTo;\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocompleteAttribute;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayAttached;\n    /**\n     * Stream of autocomplete option selections.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.optionSelections;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._formField;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n        CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatAutocomplete,\n        MatOptionModule,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    CdkScrollableModule,\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Whether the component is a textarea.\n     * @type {?}\n     */\n    MatInput.prototype._isTextarea;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {Subscription} from 'rxjs';\r\nimport {CityWeatherCard} from '../../../models/city-weather-card.model';\r\nimport {State} from '../../../reducers/city-weather.reducer';\r\nimport * as CityForeCastActions from '../../../actions/city-forecast.actions';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-city-forecast',\r\n  templateUrl: './city-forecast.component.html',\r\n  styleUrls: ['./city-forecast.component.scss']\r\n})\r\nexport class CityForecastComponent implements OnInit, OnDestroy {\r\n  cityWeatherCard: CityWeatherCard;\r\n  cityWeatherCardSub = new Subscription();\r\n  isFav: boolean;\r\n\r\n  constructor(private store: Store<{ cityWeatherReducer: State }>, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cityWeatherCardSub = this.store.select('cityWeatherReducer').subscribe(cityWeatherState => {\r\n      if (!cityWeatherState.cityWeatherCard) {\r\n        this.router.navigate(['home']);\r\n      }\r\n      this.cityWeatherCard = cityWeatherState.cityWeatherCard;\r\n      this.isFav = cityWeatherState.favourites.some(item => this.cityWeatherCard.Key === item.Key);\r\n    });\r\n  }\r\n\r\n  toggleFavorite(): void {\r\n    if (!this.isFav) {\r\n      this.store.dispatch(new CityForeCastActions.AddCityToFavourites(this.cityWeatherCard));\r\n      return;\r\n    }\r\n    this.store.dispatch(new CityForeCastActions.RemoveCityToFavourites(this.cityWeatherCard.Key));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.cityWeatherCardSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-card>\r\n  <div class=\"d-flex justify-content-between\">\r\n    <div>\r\n      <p class=\"h5 m-0\">{{cityWeatherCard.CityName}} - {{cityWeatherCard.Current.Temperature.Metric.Value | unitSign}}</p>\r\n    </div>\r\n    <div class=\"pointer\" >\r\n      <mat-icon class=\"icon-display\" (click)=\"toggleFavorite()\" *ngIf=\"!isFav\">favorite_border</mat-icon>\r\n      <mat-icon class=\"text-danger icon-display\" (click)=\"toggleFavorite()\" *ngIf=\"isFav\">favorite</mat-icon>\r\n    </div>\r\n  </div>\r\n  <mat-card-content>\r\n    <div class=\"d-flex flex-column align-items-center\">\r\n      <img class=\"icon\"\r\n           src=\"https://developer.accuweather.com/sites/default/files/{{cityWeatherCard.Current.WeatherIcon | zeroPad: 2}}-s.png\">\r\n      <p class=\"h1 text-center\">{{cityWeatherCard.Current.WeatherText}}</p>\r\n      <p class=\"h4 text-center\">{{cityWeatherCard.Forecast.Headline.Text}}</p>\r\n      <div class=\"d-flex flex-wrap flex-lg-nowrap justify-content-center\">\r\n        <div class=\"m-2 app-card\" *ngFor=\"let forecast of cityWeatherCard.Forecast.DailyForecasts\">\r\n          <div class=\"card-body\">\r\n            <p class=\"\">{{forecast.Date | date: 'EEEE, dd.MM'}}</p>\r\n            <p class=\"font-weight-bold\">{{forecast.Temperature.Minimum.Value| unitSign}}\r\n              - {{forecast.Temperature.Maximum.Value| unitSign}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent {\r\n\r\n\r\n  constructor() {}\r\n\r\n\r\n}\r\n","<app-search-bar></app-search-bar>\r\n<router-outlet></router-outlet>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\nimport {HomeComponent} from './home.component';\r\nimport {SearchBarComponent} from './search-bar/search-bar.component';\r\nimport {CityForecastComponent} from './city-forecast/city-forecast.component';\r\n\r\nimport {AccuweatherHttpService} from '../../services/accuweather-http.service';\r\nimport {AppPipesModule} from '../../pipes/app-pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n        path: 'forecast',\r\n        component: CityForecastComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    SearchBarComponent,\r\n    CityForecastComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    AppPipesModule\r\n  ],\r\n  providers: [\r\n    AccuweatherHttpService\r\n  ]\r\n})\r\nexport class HomeModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {Store} from '@ngrx/store';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {distinctUntilChanged, switchMap} from 'rxjs/operators';\r\nimport {AccuweatherHttpService} from '../../../services/accuweather-http.service';\r\nimport * as CityForeCastActions from '../../../actions/city-forecast.actions';\r\nimport {City} from '../../../models/city.model';\r\nimport {State} from '../../../reducers/city-weather.reducer';\r\n\r\n@Component({\r\n  selector: 'app-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.scss']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n\r\n\r\n  citiesList$: Observable<City[]>;\r\n  subject = new Subject<string>();\r\n  showResults: boolean;\r\n\r\n  constructor(private accuweatherHttpService: AccuweatherHttpService, private router: Router,\r\n              private route: ActivatedRoute, private store: Store<{ cityWeatherReducer: State }>) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.citiesList$ = this.subject.pipe(\r\n      distinctUntilChanged(),\r\n      switchMap(keyword => {\r\n        return this.accuweatherHttpService.search(keyword);\r\n      })\r\n    );\r\n  }\r\n\r\n  search(keyword: string): void {\r\n    if (!keyword || keyword === '') {\r\n      this.showResults = false;\r\n      return;\r\n    }\r\n    this.showResults = true;\r\n    this.subject.next(keyword);\r\n    return;\r\n  }\r\n\r\n  showCityForecast(city: City): void {\r\n    this.store.dispatch(new CityForeCastActions.FetchCityForecast(city));\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"w-100 d-flex justify-content-center\">\r\n  <mat-form-field class=\"my-2 w-75\" appearance=\"outline\">\r\n    <mat-icon matPrefix>search</mat-icon>\r\n    <mat-label>Type city name</mat-label>\r\n    <input type=\"text\"\r\n           oninput=\"this.value=this.value.replace(/[^A-Za-z\\s]/g,'')\"\r\n           placeholder=\"Type city name\"\r\n           matInput\r\n           [matAutocomplete]=\"auto\"\r\n           (keyup)=\"search($event.target.value)\">\r\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let city of citiesList$ | async\" [value]=\"city.LocalizedName\" (click)=\"showCityForecast(city)\">\r\n        {{city.LocalizedName}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n\r\n  </mat-form-field>\r\n</div>\r\n\r\n"]}